package com.spring.persistance;

import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import com.spring.domain.BoardVO;


import static com.spring.persistance.JDBCUtil.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

//@Component
@Repository //조금 더 명확하게
public class BoardDAO {
	public int insertBoard(BoardVO vo) {
		int result=0;
		PreparedStatement pstmt=null;
		Connection con=null;
		String sql="insert into spring_board(bno,title,content,writer) values(seq_board.nextval,?, ?,?)";
		
		
		try {
			con=getConnection();
			pstmt=con.prepareStatement(sql);
			pstmt.setString(1, vo.getTitle());
			pstmt.setString(2, vo.getContent());
			pstmt.setString(3, vo.getWriter());
			result=pstmt.executeUpdate();
			
			if(result>0) {
				commit(con);
			}else {
				rollback(con);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			close(pstmt);
			close(con);
		}
		
		return result;
	}
	
	public List<BoardVO> list(){
		List<BoardVO> list =new ArrayList<BoardVO>();
		
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		String sql="select * from spring_board";
		
		try {
			con=getConnection();
			pstmt=con.prepareStatement(sql);
			rs=pstmt.executeQuery();
			while(rs.next()) {
				BoardVO vo=new BoardVO();
				vo.setBno(rs.getInt("bno"));
				vo.setTitle(rs.getString("title"));
				vo.setContent(rs.getString("content"));
				vo.setWriter(rs.getString("writer"));
				vo.setRegdate(rs.getDate("regdate"));
				vo.setUpdatedate(rs.getDate("updatedate"));
				list.add(vo);
						
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			close(rs);
			close(pstmt);
			close(con);
		}
		return list;
	}
	//update(title, content, updatedate)
	public int update(String title, String content, Date updatedate) {
		int result=0;
		Connection con=null;
		PreparedStatement pstmt=null;
		
		String sql="update spring_board set content=?,updatedate=? where title=?"
	}
	
	//delete
	public int delete(int bno) {
		int result=0;
		Connection con=null;
		PreparedStatement pstmt=null;
		
		
		try {
			String sql="delete from spring_board where bno=?";

			con=getConnection();
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, bno);
			result=pstmt.executeUpdate();
		
			if(result>0) {
				commit(con);
			}else {
				rollback(con);
			}
				
		
		
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			close(pstmt);
			close(con);
		}
		return result;
	}
	
	//select
	
}
