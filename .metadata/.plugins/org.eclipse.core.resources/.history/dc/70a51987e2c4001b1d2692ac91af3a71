package com.spring.persistance;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import com.spring.domain.BoardRowMapper;
import com.spring.domain.BoardVO;




import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

//@Component
@Repository //조금 더 명확하게
public class BoardDAO {
	
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	public int insertBoard(BoardVO vo) {
	
		String sql="insert into spring_board(bno,title,content,writer) values(seq_board.nextval,?, ?,?)";
		int result=jdbcTemplate.update(sql, vo.getTitle(), vo.getContent(), vo.getWriter());
		
		return result;
	}
	
	public List<BoardVO> list(){
		
		String sql="select * from spring_board";
		
	
		return jdbcTemplate.query(sql, new BoardRowMapper());
	}
	//update(title, content, updatedate)
	public int updateBoard(BoardVO vo) {
		int result=0;
		
		
		String sql="update spring_board set title=?,content=?,updatedate=sysdate where bno=?";
		
		int result=jdbcTemplate.update(sql,vo.getTitle(), vo.getContent(), vo.getBno());
		
		return result;
		
		
	}
	
	//delete
	public int deleteBoard(int bno) {
		int result=0;
		Connection con=null;
		PreparedStatement pstmt=null;
		
		String sql="delete from spring_board where bno=?";
		
		try {

			con=ds.getConnection();
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, bno);
			result=pstmt.executeUpdate();
		
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				pstmt.close();
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return result;
	}
	
	//select
	public BoardVO select(int bno){
		BoardVO vo=null;
		Connection con=null;
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		String sql="select * from spring_board where bno=?";
		
		try {
			con=ds.getConnection();
			pstmt=con.prepareStatement(sql);
			pstmt.setInt(1, bno);
			rs=pstmt.executeQuery();
			if(rs.next()) {
				vo=new BoardVO();
				vo.setBno(rs.getInt("bno"));
				vo.setTitle(rs.getString("title"));
				vo.setContent(rs.getString("content"));
				vo.setWriter(rs.getString("writer"));
				vo.setRegdate(rs.getDate("regdate"));
				vo.setUpdatedate(rs.getDate("updatedate"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				rs.close();
				pstmt.close();
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return vo;
	}
}
