package com.spring.persistance;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;


import com.spring.domain.BookVO;

@Repository
public class BookDAO {
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
   public int isinsert(BookVO vo) {
     
      String sql = "insert into bookTBL(code,title,writer,price) values(?,?,?,?)";
      return jdbcTemplate.update(sql,vo.getCode(),vo.getTitle(),vo.getWriter(),vo.getPrice());
      
   }

   
   
   public int update(BookVO vo) {
   
      
      String sql = "update bookTBL set price=? where code = ?";
   
      return jdbcTemplate.update(sql,vo.getPrice(), vo.getCode())
   }
   public int delete(int code) {
      int result = 0;
      Connection con = null;
      PreparedStatement pstmt = null;
      String sql = "delete from bookTBL where code=?";

      try {
         con = ds.getConnection();
         pstmt = con.prepareStatement(sql);
         pstmt.setInt(1, code);
         result = pstmt.executeUpdate();
         

      } catch (Exception e) {
         e.printStackTrace();
      } finally {
        try {
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
      }
      return result;
   }

   public BookVO getRow(int code) {
      
      PreparedStatement pstmt = null;
      Connection con = null;
      ResultSet rs = null;
      BookVO vo = null;
      
      String sql ="select * from bookTBL where code = ?";
      try {
         con = ds.getConnection();
         pstmt = con.prepareStatement(sql);
         pstmt.setInt(1, code);
         rs=pstmt.executeQuery();
         if(rs.next()) {
            vo = new BookVO();
            vo.setCode(rs.getInt(1));
            vo.setTitle(rs.getString(2));
            vo.setWriter(rs.getString(3));
            vo.setPrice(rs.getInt(4));
         }
      } catch (Exception e) {
         e.printStackTrace();
         
      }finally {
         try {
			rs.close();
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
      }
      return vo;
   }
   
   public List<BookVO> getList(){
      PreparedStatement pstmt = null;
      Connection con = null;
      ResultSet rs = null;
      List<BookVO> list = new ArrayList<BookVO>();
      
      String sql = "select * from bookTBL";
      try {
         con = ds.getConnection();
         pstmt = con.prepareStatement(sql);
         rs = pstmt.executeQuery();
         
         while(rs.next()) {
            BookVO vo = new BookVO();
            vo.setCode(rs.getInt(1));
            vo.setTitle(rs.getString(2));
            vo.setWriter(rs.getString(3));
            vo.setPrice(rs.getInt(4));
            list.add(vo);
         }
      
      } catch (Exception e) {
         e.printStackTrace();
         
      }finally {
    	  try {
			rs.close();
			pstmt.close();
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
      }
      return list;
   }
}